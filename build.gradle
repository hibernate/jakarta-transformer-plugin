plugins {
    id 'java-library'
    id 'java-gradle-plugin'
    id 'com.github.sebersole.testkit-junit5' version '1.2.0'

    id 'com.gradle.plugin-publish' version '0.12.0'
    id 'nu.studer.credentials' version '2.1'
}

group 'org.hibernate.build'
version '0.9.3-SNAPSHOT'

buildDir 'target'

ext {
    pluginId = 'org.hibernate.jakarta-transformer'
    pluginVersion = project.version

    if ( project.hasProperty( 'hibernatePluginPortalUsername' ) ) {
        credentials.hibernatePluginPortalUsername = project.property( 'hibernatePluginPortalUsername' )
    }
    if ( credentials.hibernatePluginPortalUsername != null ) {
        project.setProperty( 'gradle.publish.key', credentials.hibernatePluginPortalUsername )
    }

    if ( project.hasProperty( 'hibernatePluginPortalPassword' ) ) {
        credentials.hibernatePluginPortalPassword = project.property( 'hibernatePluginPortalPassword' )
    }
    if ( credentials.hibernatePluginPortalPassword != null ) {
        project.setProperty( 'gradle.publish.secret', credentials.hibernatePluginPortalPassword )
    }
}

gradlePlugin {
    plugins {
        create('transformerPlugin') {
            id = pluginId
            implementationClass = 'org.hibernate.build.gradle.jakarta.TransformerPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/hibernate/jakarta-transformer-plugin/'
    vcsUrl = 'https://github.com/hibernate/jakarta-transformer-plugin/'
    tags = [ 'JakartaTransformer', 'Hibernate' ]

    plugins {
        getByName('transformerPlugin') {
            displayName = 'Hibernate JakartaTransformer plugin'
            description = 'Plugin developed for the Hibernate project to handle JakartaTransformer processing'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    ext {
        assertjVersion = '3.14.0'
        junitVersion = '5.7.0'
    }

    implementation gradleApi()

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.assertj:assertj-core:${assertjVersion}"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

tasks.javadoc {
    options.addStringOption( "Xdoclint:none", "-quiet" )
}
